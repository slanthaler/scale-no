---
#
name: 'ns_uno'
run_name: 'NS UNO'
dataset: 'NS'
# uno2d
modes: 32
width: 64
depth: 2
level: 2
uno_out_channels: [32, 64, 64, 32]
uno_n_modes: [[20,20], [20,20], [20,20], [20,20]]
uno_scalings: [[1,1], [0.5,0.5], [1,1], [2,2]]
channel_mlp_skip: "linear"
mlp: False

# training
learning_rate: 1e-3
weight_decay: 1e-4
batch_size: 5
epochs: 101

model: "UNO"
n_train: 50
n_test: 5
n_selfcon: 20
epochs_selfcon: 1 # now epochs_selfcon is the epoch to start self-consistency loss
epoch_test: 1

truncate: 2 # truncate to sub-domain
S: 128
T: 290
T_in: 10
sub_s: 1
sub_t: 1

# datasets
data_dir: '/pscratch/sd/z/zongyili/mhchen'

train_data: 'KF_f0_Re1000_N60_T300_S256_train.pt'
train_re: 1000
test_data: [
  'KF_f0_Re250_N5_T300_S64_test.pt',
  'KF_f0_Re500_N5_T300_S128_test.pt',
  'KF_f0_Re1000_N5_T300_S256_test.pt',
  'KF_f0_Re2000_N5_T300_S256_test.pt',
  'KF_f0_Re4000_N5_T300_S512_test.pt',
  'KF_f0_Re10000_N5_T300_S1024_test.pt',
]
test_re: [
  250,
  500,
  1000,
  2000,
  4000,
  10000,
]
selfcon_data:

#
augmentation_loss: 0
augmentation_samples: 1
use_augmentation:
sample_virtual_instance: 0
